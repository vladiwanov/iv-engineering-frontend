{"version":3,"file":"static/js/493.003209b2.chunk.js","mappings":"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","sources":["webpack://iv-engineering-frontend/./src/content-components/LANContent/LANContent.module.scss?3968","utils/db/images-db/lan-images.js","content-components/LANContent/LANContent.js","tools/arrayMaping.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LANContent_section__53Oot\",\"container\":\"LANContent_container__pMBl0\",\"title\":\"LANContent_title__ynEo3\",\"subtitle\":\"LANContent_subtitle__8XfWX\",\"app-bar\":\"LANContent_app-bar__veZih\",\"items\":\"LANContent_items__5dcDx\",\"userMenu\":\"LANContent_userMenu__VBtNM\",\"h3\":\"LANContent_h3__zF+qJ\",\"button\":\"LANContent_button__RJFGv\",\"contacts\":\"LANContent_contacts__WyUUp\",\"contactsAnimation\":\"LANContent_contactsAnimation__jyLAs\",\"animate100\":\"LANContent_animate100__R4LBJ\",\"contentAnimation\":\"LANContent_contentAnimation__eKuBp\",\"animate200\":\"LANContent_animate200__eh6cj\",\"active\":\"LANContent_active__n9V7F\",\"activeSlide1\":\"LANContent_activeSlide1__LI72e\",\"animateSlide400\":\"LANContent_animateSlide400__IzrfN\",\"activeSlide2\":\"LANContent_activeSlide2__636RH\",\"animateSlide500\":\"LANContent_animateSlide500__9FOvy\",\"inactive\":\"LANContent_inactive__vNa8f\",\"itemsList\":\"LANContent_itemsList__30dFQ\",\"heads\":\"LANContent_heads__EfWS7\",\"subhead\":\"LANContent_subhead__W-8-a\",\"subheadItems\":\"LANContent_subheadItems__0soEz\",\"pain\":\"LANContent_pain__45soc\",\"painArticle\":\"LANContent_painArticle__i7nu0\",\"images\":\"LANContent_images__HjKX-\",\"worksImages\":\"LANContent_worksImages__mkdOe\",\"contentItems\":\"LANContent_contentItems__qw8Bb\",\"test\":\"LANContent_test__2-Jgz\",\"worksList\":\"LANContent_worksList__CAunp\",\"worksTitle\":\"LANContent_worksTitle__a6hJ6\",\"worksItems\":\"LANContent_worksItems__MIeMS\",\"worksContent\":\"LANContent_worksContent__qhkxt\",\"itemText\":\"LANContent_itemText__nADye\",\"text\":\"LANContent_text__T8lx1\",\"textItem\":\"LANContent_textItem__hHHwH\",\"link\":\"LANContent_link__w5euR\",\"lan\":\"LANContent_lan__7q9mQ\",\"lanList\":\"LANContent_lanList__yVjF9\",\"contentLanList\":\"LANContent_contentLanList__kaX9u\"};","// begin===================\n\n// import slide1 from '../img/LAN/LAN-1.jpg';\nimport slide1 from '../img/LAN/LAN-1opt.jpg';\nimport slide2 from '../img/LAN/LAN-2.jpg';\nimport slide3 from '../img/LAN/LAN-3opt.jpg';\nimport slide4 from '../img/LAN/LAN-4.jpg';\nimport slide5 from '../img/LAN/LAN-5.jpg';\nimport slide6 from '../img/LAN/project-developing.jpg'\nimport slide7 from '../img/LAN/system-services.jpg'\nconst data = [slide1, slide2, slide3, slide4, slide5, slide6, slide7];\n\nexport default data;\n","import s from './LANContent.module.scss';\nimport { useEffect } from 'react';\nimport images from '../../utils/db/images-db/lan-images';\nimport LangContentSelector from '../../additional-components/LanguageContentSelector';\nimport { useSelector } from 'react-redux';\nimport { getLanguageMemoised } from 'redux/languages/languages-selector';\nimport Submit from 'tools/Submit';\nimport io from 'tools/io';\nimport arrayMaping from 'tools/arrayMaping';\nexport default function LANContent() {\n  const currentLanguage = useSelector(getLanguageMemoised);\n  const { lan, lanDirections } = LangContentSelector(currentLanguage);\n\n  // -------------------------IO---------------------------\n  useEffect(() => {\n    io();\n  }, []);\n  // ------------------------------------------------------\n\n  return (\n    <>\n      <section className={s.lan}>\n        <h2 className={s.heads}>{lan.head}</h2>\n        <p className={s.pain} style={{ marginBottom: '30px' }}>\n          {lan.pain}\n        </p>\n        {/* <b className={s.subhead}>{lan.subhead[0]}</b> */}\n        <ul>\n          <li className={s.contentItems} id=\"contentItems\">\n            <div className={s.itemText}>\n              <p className={`${s.subhead} ${s.subheadItems} `}>\n                {lan.solutions[0]}\n              </p>\n               <p className={s.pain}>{ lanDirections.lanText}</p>\n\n              <ul className={s.contentLanList}>\n                <li>\n                  <p className={`${s.subheadItems}`}>\n                    {lanDirections.contentLAN[0]}\n                  </p>\n                  {arrayMaping(\n                    lanDirections.detailsDATA,\n                    s.lanList,\n                    s.text,\n                    s.textItem,\n                  )}\n\n                  {/* <ul className={s.lanList}>\n                    {lanDirections.detailsDATA.map((detail, i) => (\n                      <li key={i} className={s.text}>\n                        <p className={s.textItem}>{detail}</p>\n                      </li>\n                    ))}\n                  </ul> */}\n                </li>\n                <li>\n                  <p className={`${s.subheadItems}`}>\n                    {lanDirections.contentLAN[1]}\n                  </p>\n                  {arrayMaping(\n                    lanDirections.detailsSCS,\n                    s.lanList,\n                    s.text,\n                    s.textItem,\n                  )}\n\n                  {/* <ul className={s.lanList}>\n                    {lanDirections.detailsSCS.map((detail, i) => (\n                      <li key={i} className={s.text}>\n                        <p className={s.textItem}>{detail}</p>\n                      </li>\n                    ))}\n                  </ul> */}\n                </li>\n\n                <li>\n                  <p className={`${s.subheadItems}`}>\n                    {lanDirections.contentLAN[2]}\n                  </p>\n                  {arrayMaping(\n                    lanDirections.detailsLAN,\n                    s.lanList,\n                    s.text,\n                    s.textItem,\n                  )}\n                  {/* <ul className={s.lanList}>\n                    {lanDirections.detailsDATA.map((detail, i) => (\n                      <li key={i} className={s.text}>\n                        <p className={s.textItem}>{detail}</p>\n                      </li>\n                    ))}\n                  </ul> */}\n                </li>\n                {/* <li>\n                  <p className={`${s.subheadItems}`}>\n                    {lanDirections.contentLAN[3]}\n                  </p>\n                  {arrayMaping(\n                    lanDirections.lanIntegration,\n                    s.lanList,\n                    s.text,\n                    s.textItem,\n                  )}\n                </li> */}\n              </ul>\n\n              <Submit />\n            </div>\n            {/* <img src={images[0]} className={s.images} alt=\"content\" /> */}\n          </li>\n\n          <li className={s.contentItems} id=\"contentItems\">\n            <img\n              src={images[1]}\n              className={s.images}\n              alt=\"system integration\"\n            />\n            <div className={s.itemText}>\n              <p className={`${s.subhead} ${s.subheadItems}`}>\n                {lan.solutions[1]}\n              </p>\n\n              {arrayMaping(lan.text1, s.itemsList, s.text, s.textItem)}\n\n              <Submit />\n            </div>\n          </li>\n\n          <li className={s.contentItems} id=\"contentItems\">\n            <div className={s.itemText}>\n              <p className={`${s.subhead} ${s.subheadItems}`}>\n                {lan.solutions[2]}\n              </p>\n              {arrayMaping(lan.text2, s.itemsList, s.text, s.textItem)}\n              <Submit />\n            </div>\n            <img src={images[2]} className={s.images} alt=\"clouds\" />\n          </li>\n        </ul>\n\n        <b className={`${s.subhead} ${s.worksTitle}`}>{lan.subhead[1]}</b>\n        <ul className={s.worksList}>\n          <li className={s.worksItems}>\n            <p className={s.worksContent}>{lan.works[0]}</p>\n            <img\n              src={images[5]}\n              className={s.worksImages}\n              alt=\"project developing\"\n            />\n          </li>\n          <li className={s.worksItems}>\n            <p className={s.worksContent}>{`${lan.works[1]}`}</p>\n\n            <img\n              src={images[3]}\n              className={s.worksImages}\n              alt=\"project developing\"\n            />\n          </li>\n          <li className={s.worksItems}>\n            <p className={s.worksContent}>{`${lan.works[2]}`}</p>\n            <img\n              src={images[6]}\n              className={s.worksImages}\n              alt=\"system services\"\n            />\n          </li>\n        </ul>\n        {/* <Submit/> */}\n      </section>\n    </>\n  );\n}\n\n// -------------------------IO---------------------------\n\n// const cb = entries => {\n//   // console.log('ENRTIES IN CB::::::', entries);\n//   entries.forEach((entry, i) => {\n//     if (entry.isIntersecting) {\n//       entry.target.classList.add(`${s.active}`);\n//       // observer.unobserve(entry);\n//     }\n//   });\n// };\n\n// const options = {\n//   // rootMargin: '-200px',\n//   // threshold: 0.3,\n// };\n\n// const observer = new IntersectionObserver(cb, options);\n\n// useEffect(() => {\n//   const targets = document.querySelectorAll('.lanItems');\n//   // console.log('TARGET_ARRAY:::::', targets);\n\n//   targets.forEach(target => observer.observe(target));\n// }, []);\n\n// ---------------------------------------------------------------\n","import React from 'react';\n\nexport default function arrayMaping(\n  array,\n  classNameList,\n  classNameItems,\n  textItem,\n) {\n  // console.log(array);\n  // console.log('CLASSNAME:::::::');\n\n  return (\n    <ul className={classNameList}>\n      {array.map((item, i) => (\n        <li key={i} className={classNameItems}>\n          {/* <p className={textItem}>{item.toLowerCase()}</p> */}\n          <p className={textItem}>{item}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["LANContent","currentLanguage","useSelector","getLanguageMemoised","LangContentSelector","lan","lanDirections","useEffect","io","className","s","head","style","marginBottom","pain","id","solutions","lanText","contentLAN","arrayMaping","detailsDATA","detailsSCS","detailsLAN","Submit","src","images","alt","text1","text2","subhead","works","array","classNameList","classNameItems","textItem","map","item","i"],"sourceRoot":""}